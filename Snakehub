local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Rayfield Example Window",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"snakehublollpaid"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})
local Tab = Window:CreateTab("CustomItems", 4483362458) -- Title, Image
local Section = Tab:CreateSection("Snakeitem")
Section:Set("legitcustomitems")
local Divider = Tab:CreateDivider()
Divider:Set(false) -- Whether the divider's visibility is to be set to true or false.
Rayfield:Notify({
   Title = "u logged in!",
   Content = "welcome back!",
   Duration = 6.5,
   Image = 4483362458,
})
local Button = Tab:CreateButton({
   Name = "fucked by jack at Mischieviouscrucifix",
   Callback = function()
})
local Button = Tab:CreateButton({
   Name = "chillseek",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/Idk-lol2/chill-seek/refs/heads/main/chillseklal.Pl.txt"))()
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "colored skull key",
   Callback = function()
   loadstring(game:HttpGet('https://raw.githubusercontent.com/hi822010/Key-Skeleton-Colored/refs/heads/main/Key%20Skeleton%20Colored'))()
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "smile",
   Callback = function()
   loadstring(game:HttpGet('https://pastefy.app/YMa2CPBC/raw'))()
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "magicbook",
   Callback = function()
   loadstring(game:HttpGet(("https://raw.githubusercontent.com/IdkMyNameLoll/PublicScripts/refs/heads/main/MagicBookRunner"),true))()
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "guiding Shears",
   Callback = function()
   loadstring(game:HttpGet("https://pastebin.com/raw/5gJCt83g"))()
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "seek_crucifix",
   Callback = function()
   loadstring(game:HttpGet('https://raw.githubusercontent.com/hi822010/Extras-Gliese-Hub-Doors/refs/heads/main/Seek%20Crucifix'))()
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "glitch scanner",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/Agadigas/Doors/refs/heads/main/Glitched%20Scanner%20by%20Custom%20Doors"))()
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "dread Spawner",
   Callback = function()
   -- Hello!
function DeathHint(args, Color) -- credits to Master Oogway in the kardin hong discord server
local func, setupval, getinfo, typeof, getgc, next = nil, debug.setupvalue or setupvalue, debug.getinfo or getinfo, typeof, getgc, next

for i,v in next, getgc(false) do
    if typeof(v) == "function" then
        local info = getinfo(v)
        if info.currentline == 54 and info.nups == 2 and info.is_vararg == 0 then
            func = v
            break
        end
    end
end

local function Hint(hints, type: string)
    setupval(func, 1, hints)
    if type ~= nil then
        setupval(func, 2, type)
    end
end

Hint({
unpack(args)
}, Color)
end
spawn(function()
require(game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.RemoteListener.Modules.Dread)(require(game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game))
end)
repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui.MainUI.MainFrame.DreadVignette.Visible == true
wait(1)
repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui.MainUI.MainFrame.DreadVignette.ImageColor3 ~= Color3.fromRGB(0,0,0) or not workspace:FindFirstChild('Dread')
if not workspace:FindFirstChild("Dread") then -- Player went to the next door despawning dread.
return
end
 game:GetService("ReplicatedStorage") .GameStats["Player_".. game.Players.LocalPlayer.Name].Total.DeathCause.Value = "Dread" -- forcing the game to set the entity i died to as "Dread"
  spawn(function()
 require(game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.RemoteListener.Jumpscares.Dread) (require(game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)) -- Dread Jumpscare
 end)
  wait(1)
  pcall(function()
  DeathHint({"You died to Dread...", "Try not to stall. Keep moving!"}, "Blue") -- Creating the Death Hint
end)
wait(1)
game.Players.LocalPlayer.Character.Humanoid:TakeDamage(1000) -- Killing the player
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "fuck byjack",
   Callback = function()
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "Customenity closed",
   Callback = function()
   
   -- The function that takes place when the button is pressed
   end,
})
Button:Set("Custom items and enity")
local Toggle = Tab:CreateToggle({
   Name = "Toggle Example",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- The function that takes place when the toggle is pressed
   -- The variable (Value) is a boolean on whether the toggle is true or false
   end,
})
Toggle:Set(false)
local Label = Tab:CreateLabel("custom items And Enity", 4483362458, Color3.fromRGB(255, 255, 255), false) -- Title, Icon, Color, IgnoreTheme

Label:Set("Label Example", 4483362458, Color3.fromRGB(255, 255, 255), false) -- Title, Icon, Color, IgnoreTheme
local Paragraph = Tab:CreateParagraph({Title = "Paragraph Example", Content = "Bye"})
Paragraph:Set({Title = "Paragraph Example", Content = "Paragraph Example"})
